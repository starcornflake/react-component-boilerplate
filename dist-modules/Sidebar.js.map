{"version":3,"sources":["../src/Sidebar.js"],"names":[],"mappings":"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","file":"Sidebar.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst CANCEL_DISTANCE_ON_SCROLL = 20;\n\nconst defaultStyles = {\n  root: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'hidden',\n  },\n  sidebar: {\n    zIndex: 2,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    transition: 'transform .3s ease-out',\n    WebkitTransition: '-webkit-transform .3s ease-out',\n    willChange: 'transform',\n    overflowY: 'auto',\n  },\n  content: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    overflow: 'auto',\n    transition: 'left .3s ease-out, right .3s ease-out',\n  },\n  overlay: {\n    zIndex: 1,\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    opacity: 0,\n    visibility: 'hidden',\n    transition: 'opacity .3s ease-out',\n    backgroundColor: 'rgba(0,0,0,.3)',\n  },\n  dragHandle: {\n    zIndex: 1,\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n  },\n};\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: 0,\n\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchStartY: null,\n      touchCurrentX: null,\n      touchCurrentY: null,\n\n      // if touch is supported by the browser\n      dragSupported: typeof window === 'object' && 'ontouchstart' in window,\n    };\n\n    this.overlayClicked = this.overlayClicked.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchMove = this.onTouchMove.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.saveSidebarWidth();\n  }\n\n  componentDidUpdate() {\n    // filter out the updates when we're touching\n    if (!this.isTouching()) {\n      this.saveSidebarWidth();\n    }\n  }\n\n  onTouchStart(ev) {\n    // filter out if a user starts swiping with a second finger\n    if (!this.isTouching()) {\n      const touch = ev.targetTouches[0];\n      this.setState({\n        touchIdentifier: touch.identifier,\n        touchStartX: touch.clientX,\n        touchStartY: touch.clientY,\n        touchCurrentX: touch.clientX,\n        touchCurrentY: touch.clientY,\n      });\n    }\n  }\n\n  onTouchMove(ev) {\n    if (this.isTouching()) {\n      for (let ind = 0; ind < ev.targetTouches.length; ind++) {\n        // we only care about the finger that we are tracking\n        if (ev.targetTouches[ind].identifier === this.state.touchIdentifier) {\n          this.setState({\n            touchCurrentX: ev.targetTouches[ind].clientX,\n            touchCurrentY: ev.targetTouches[ind].clientY,\n          });\n          break;\n        }\n      }\n    }\n  }\n\n  onTouchEnd() {\n    if (this.isTouching()) {\n      // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n      const touchWidth = this.touchSidebarWidth();\n\n      if (this.props.open && touchWidth < this.state.sidebarWidth - this.props.dragToggleDistance ||\n          !this.props.open && touchWidth > this.props.dragToggleDistance) {\n        this.props.onSetOpen(!this.props.open);\n      }\n\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchStartY: null,\n        touchCurrentX: null,\n        touchCurrentY: null,\n      });\n    }\n  }\n\n  // This logic helps us prevents the user from sliding the sidebar horizontally\n  // while scrolling the sidebar vertically. When a scroll event comes in, we're\n  // cancelling the ongoing gesture if it did not move horizontally much.\n  onScroll() {\n    if (this.isTouching() && this.inCancelDistanceOnScroll()) {\n      this.setState({\n        touchIdentifier: null,\n        touchStartX: null,\n        touchStartY: null,\n        touchCurrentX: null,\n        touchCurrentY: null,\n      });\n    }\n  }\n\n  // True if the on going gesture X distance is less than the cancel distance\n  inCancelDistanceOnScroll() {\n    let cancelDistanceOnScroll;\n\n    if (this.props.pullRight) {\n      cancelDistanceOnScroll = Math.abs(this.state.touchCurrentX - this.state.touchStartX) <\n                                        CANCEL_DISTANCE_ON_SCROLL;\n    } else {\n      cancelDistanceOnScroll = Math.abs(this.state.touchStartX - this.state.touchCurrentX) <\n                                        CANCEL_DISTANCE_ON_SCROLL;\n    }\n    return cancelDistanceOnScroll;\n  }\n\n  isTouching() {\n    return this.state.touchIdentifier !== null;\n  }\n\n  overlayClicked() {\n    if (this.props.open) {\n      this.props.onSetOpen(false);\n    }\n  }\n\n  saveSidebarWidth() {\n    const width = ReactDOM.findDOMNode(this.refs.sidebar).offsetWidth;\n\n    if (width !== this.state.sidebarWidth) {\n      this.setState({sidebarWidth: width});\n    }\n  }\n\n  // calculate the sidebarWidth based on current touch info\n  touchSidebarWidth() {\n    // if the sidebar is open and start point of drag is inside the sidebar\n    // we will only drag the distance they moved their finger\n    // otherwise we will move the sidebar to be below the finger.\n    if (this.props.pullRight) {\n      if (this.props.open && window.innerWidth - this.state.touchStartX < this.state.sidebarWidth) {\n        if (this.state.touchCurrentX > this.state.touchStartX) {\n          return this.state.sidebarWidth + this.state.touchStartX - this.state.touchCurrentX;\n        }\n        return this.state.sidebarWidth;\n      }\n      return Math.min(window.innerWidth - this.state.touchCurrentX, this.state.sidebarWidth);\n    }\n\n    if (this.props.open && this.state.touchStartX < this.state.sidebarWidth) {\n      if (this.state.touchCurrentX > this.state.touchStartX) {\n        return this.state.sidebarWidth;\n      }\n      return this.state.sidebarWidth - this.state.touchStartX + this.state.touchCurrentX;\n    }\n    return Math.min(this.state.touchCurrentX, this.state.sidebarWidth);\n  }\n\n  render() {\n    const sidebarStyle = {...defaultStyles.sidebar, ...this.props.styles.sidebar};\n    const contentStyle = {...defaultStyles.content, ...this.props.styles.content};\n    const overlayStyle = {...defaultStyles.overlay, ...this.props.styles.overlay};\n    const useTouch = this.state.dragSupported && this.props.touch;\n    const isTouching = this.isTouching();\n    const rootProps = {\n      style: {...defaultStyles.root, ...this.props.styles.root},\n    };\n    let dragHandle;\n\n    // sidebarStyle right/left\n    if (this.props.pullRight) {\n      sidebarStyle.right = 0;\n      sidebarStyle.transform = 'translateX(100%)';\n      sidebarStyle.WebkitTransform = 'translateX(100%)';\n      if (this.props.shadow) {\n        sidebarStyle.boxShadow = '-2px 2px 4px rgba(0, 0, 0, 0.15)';\n      }\n    } else {\n      sidebarStyle.left = 0;\n      sidebarStyle.transform = 'translateX(-100%)';\n      sidebarStyle.WebkitTransform = 'translateX(-100%)';\n      if (this.props.shadow) {\n        sidebarStyle.boxShadow = '2px 2px 4px rgba(0, 0, 0, 0.15)';\n      }\n    }\n\n    if (isTouching) {\n      const percentage = this.touchSidebarWidth() / this.state.sidebarWidth;\n\n      // slide open to what we dragged\n      if (this.props.pullRight) {\n        sidebarStyle.transform = `translateX(${(1 - percentage) * 100}%)`;\n        sidebarStyle.WebkitTransform = `translateX(${(1 - percentage) * 100}%)`;\n      } else {\n        sidebarStyle.transform = `translateX(-${(1 - percentage) * 100}%)`;\n        sidebarStyle.WebkitTransform = `translateX(-${(1 - percentage) * 100}%)`;\n      }\n\n      // fade overlay to match distance of drag\n      overlayStyle.opacity = percentage;\n      overlayStyle.visibility = 'visible';\n    } else if (this.props.docked) {\n      // show sidebar\n      if (this.state.sidebarWidth !== 0) {\n        sidebarStyle.transform = `translateX(0%)`;\n        sidebarStyle.WebkitTransform = `translateX(0%)`;\n      }\n\n      // make space on the left/right side of the content for the sidebar\n      if (this.props.pullRight) {\n        contentStyle.right = `${this.state.sidebarWidth}px`;\n      } else {\n        contentStyle.left = `${this.state.sidebarWidth}px`;\n      }\n    } else if (this.props.open) {\n      // slide open sidebar\n      sidebarStyle.transform = `translateX(0%)`;\n      sidebarStyle.WebkitTransform = `translateX(0%)`;\n\n      // show overlay\n      overlayStyle.opacity = 1;\n      overlayStyle.visibility = 'visible';\n    }\n\n    if (isTouching || !this.props.transitions) {\n      sidebarStyle.transition = 'none';\n      sidebarStyle.WebkitTransition = 'none';\n      contentStyle.transition = 'none';\n      overlayStyle.transition = 'none';\n    }\n\n    if (useTouch) {\n      if (this.props.open) {\n        rootProps.onTouchStart = this.onTouchStart;\n        rootProps.onTouchMove = this.onTouchMove;\n        rootProps.onTouchEnd = this.onTouchEnd;\n        rootProps.onTouchCancel = this.onTouchEnd;\n        rootProps.onScroll = this.onScroll;\n      } else {\n        const dragHandleStyle = {...defaultStyles.dragHandle, ...this.props.styles.dragHandle};\n        dragHandleStyle.width = this.props.touchHandleWidth;\n\n        // dragHandleStyle right/left\n        if (this.props.pullRight) {\n          dragHandleStyle.right = 0;\n        } else {\n          dragHandleStyle.left = 0;\n        }\n\n        dragHandle = (\n          <div style={dragHandleStyle}\n               onTouchStart={this.onTouchStart} onTouchMove={this.onTouchMove}\n               onTouchEnd={this.onTouchEnd} onTouchCancel={this.onTouchEnd} />);\n      }\n    }\n\n    return (\n      <div {...rootProps}>\n        <div className={this.props.sidebarClassName} style={sidebarStyle} ref=\"sidebar\">\n          {this.props.sidebar}\n        </div>\n        <div style={overlayStyle}\n             onClick={this.overlayClicked} onTouchTap={this.overlayClicked} />\n        <div style={contentStyle}>\n          {dragHandle}\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  // main content to render\n  children: React.PropTypes.node.isRequired,\n\n  // styles\n  styles: React.PropTypes.shape({\n    root: React.PropTypes.object,\n    sidebar: React.PropTypes.object,\n    content: React.PropTypes.object,\n    overlay: React.PropTypes.object,\n    dragHandle: React.PropTypes.object,\n  }),\n\n  // sidebar optional class\n  sidebarClassName: React.PropTypes.string,\n\n  // sidebar content to render\n  sidebar: React.PropTypes.node.isRequired,\n\n  // boolean if sidebar should be docked\n  docked: React.PropTypes.bool,\n\n  // boolean if sidebar should slide open\n  open: React.PropTypes.bool,\n\n  // boolean if transitions should be disabled\n  transitions: React.PropTypes.bool,\n\n  // boolean if touch gestures are enabled\n  touch: React.PropTypes.bool,\n\n  // max distance from the edge we can start touching\n  touchHandleWidth: React.PropTypes.number,\n\n  // Place the sidebar on the right\n  pullRight: React.PropTypes.bool,\n\n  // Enable/Disable sidebar shadow\n  shadow: React.PropTypes.bool,\n\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: React.PropTypes.number,\n\n  // callback called when the overlay is clicked\n  onSetOpen: React.PropTypes.func,\n};\n\nSidebar.defaultProps = {\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  touchHandleWidth: 20,\n  pullRight: false,\n  shadow: true,\n  dragToggleDistance: 30,\n  onSetOpen: () => {},\n  styles: {},\n};\n\nexport default Sidebar;"]}